name: Build and Push Strapi Docker Image

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
  IMAGE_TAG: ${{ github.sha }}  # unique tag per commit
  IMAGE_URI: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 3. Login to Amazon ECR
      - name: Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set environment variables for compose
        run: |
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> $GITHUB_ENV
          echo "ECR_REPOSITORY=${{ secrets.ECR_REPOSITORY }}" >> $GITHUB_ENV

      - name: Create .env file
        run: |
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" > .env
          echo "ECR_REPOSITORY=${{ secrets.ECR_REPOSITORY }}" >> .env
          
      # 6. Pull prebuilt Strapi image from Docker Hub
      - name: Pull Strapi image from Docker Hub
        run: docker pull sairambadari/strapi:latest

      # 7. Tag Strapi image for ECR
      - name: Tag Strapi image for ECR
        run: docker tag sairambadari/strapi:latest ${{ env.IMAGE_URI }}:latest

      # 8. Push Strapi image to ECR
      - name: Push Strapi image to ECR
        run: docker push ${{ env.IMAGE_URI }}:latest

      # 9. Pull all images using Compose (Postgres + Strapi from ECR)
      - name: Pull Compose images
        run: docker compose -f ./src/compose.yml --env-file .env pull
